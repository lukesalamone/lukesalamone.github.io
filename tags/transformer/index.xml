<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Transformer on Luke Salamone&#39;s Blog</title>
    <link>https://lukesalamone.github.io/tags/transformer/</link>
    <description>Recent content in Transformer on Luke Salamone&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Nov 2022 15:24:15 -0500</lastBuildDate>
    <atom:link href="https://lukesalamone.github.io/tags/transformer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Few Notes on the Transformer</title>
      <link>https://lukesalamone.github.io/posts/self-attention/</link>
      <pubDate>Wed, 16 Nov 2022 15:24:15 -0500</pubDate>
      <guid>https://lukesalamone.github.io/posts/self-attention/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;../../img/self-attention.png&#34;&#xA;    alt=&#34;A self-attention block depicted as a neural network.&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;A self-attention block depicted as a neural network.&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;In this post I will describe the attention mechanism, commonly used in transformers, a popular neural language architecture. Most of the most well-known large language models of late are based on the transformer architecture. Attention was first described in &lt;a href=&#34;https://proceedings.neurips.cc/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf&#34;&gt;Attention is All You Need&lt;/a&gt; by Vaswani et al.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-attention&#34;&gt;What is attention?&lt;/h2&gt;&#xA;&lt;p&gt;At a high level, attention is a mechanism for neural networks to boost portions of an input which are relevant and ignore those which aren&amp;rsquo;t. In language models, attention is used as a way for the model to learn which portions of a sentence are relevant to each word.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paper Summary: COMET (Knowledge Graph Construction)</title>
      <link>https://lukesalamone.github.io/posts/knowledge-graph-construction/</link>
      <pubDate>Tue, 17 May 2022 17:47:25 +0700</pubDate>
      <guid>https://lukesalamone.github.io/posts/knowledge-graph-construction/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;../../img/comet_knowledge_generation.png&#34;&#xA;    alt=&#34;Selected {subject, relation, object} tuples generated by COMET&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Selected {subject, relation, object} tuples generated by COMET&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Paper link: &lt;a href=&#34;https://arxiv.org/abs/1906.05317&#34;&gt;https://arxiv.org/abs/1906.05317&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;This paper describes COMET, a method of generating knowledge bases automatically. Previous work largely focused on encyclopedic knowledge, which has well-defined relationships. This paper, however, focuses on commonsense knowledge. In this paper the authors introduce a “commonsense transformer” which trains on a knowledge base consisting of tuples and a pre-trained language model. Their trained model generates new nodes in the knowledge graph and completes phrases based on edges in the existing graph.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
