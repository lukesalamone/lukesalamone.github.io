<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>llm on Luke Salamone&#39;s Blog</title>
    <link>https://lukesalamone.github.io/tags/llm/</link>
    <description>Recent content in llm on Luke Salamone&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Jan 2025 08:35:55 -0800</lastBuildDate><atom:link href="https://lukesalamone.github.io/tags/llm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on Deepseek R1</title>
      <link>https://lukesalamone.github.io/posts/notes-on-deepseek-r1/</link>
      <pubDate>Tue, 28 Jan 2025 08:35:55 -0800</pubDate>
      
      <guid>https://lukesalamone.github.io/posts/notes-on-deepseek-r1/</guid>
      <description>DeepSeek R1 is a large language model which employs test-time compute to generate a response. Unlike many decoder-based models in the past which simply continue the given text (and may be fine-tuned for conversation), R1 generates reasoning tokens before the final answer is given. According to the researchers, its performance is on par with OpenAI&amp;rsquo;s O1 model.
Terminology First, I will briefly describe some terminology related to training techniques:
  Supervised fine-tuning (SFT) is a process which uses input/output pairs to directly fine-tune a model.</description>
    </item>
    
    <item>
      <title>What are Sparse Autoencoders?</title>
      <link>https://lukesalamone.github.io/posts/sparse-autoencoder/</link>
      <pubDate>Thu, 06 Jun 2024 16:30:27 -0700</pubDate>
      
      <guid>https://lukesalamone.github.io/posts/sparse-autoencoder/</guid>
      <description>MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\[&#39;,&#39;\]&#39;]], processEscapes: true, processEnvironments: true, skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;], TeX: { equationNumbers: { autoNumber: &#34;AMS&#34; }, extensions: [&#34;AMSmath.js&#34;, &#34;AMSsymbols.js&#34;] } } });  MathJax.Hub.Queue(function() { // Fix  tags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown. Discussion at // https://github.com/mojombo/jekyll/issues/199 var all = MathJax.Hub.getAllJax(), i; for(i = 0; i TLDR: A sparse autoencoder is just a regular autoencoder that encourages sparsity with an L1 penalty or KL divergence loss rather than using a low-dimensional bottleneck.</description>
    </item>
    
  </channel>
</rss>
